name: Build and Release
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    # If commit message contains "[Released]" only then this job would be run.
    # You can also trigger a workflow on creating a release, 
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#release
    if: "contains(github.event.head_commit.message, '[Released]')" 
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      # Here we append all the credentials to local.properties file.
      # Make sure you add them in your secrets.
      - name: Creating local properties file
        run: echo signing.keyId=${{ secrets.SIGNING_KEYID }} >> local.properties
      - run: echo signing.password=${{ secrets.SIGNING_PASSWORD }} >> local.properties
      - run: echo ossrhUsername=${{ secrets.OSSRH_USERNAME }} >> local.properties
      - run: echo ossrhPassword=${{ secrets.OSSRH_PASSWORD }} >> local.properties
      # This is how I store key.gpg file (read article on how this works).
      - name: Creating key.gpg
        id: write_file
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: "key.gpg"
          encodedString: ${{ secrets.SIGNING_KEY_GPG }}
      - run: echo signing.secretKeyRingFile=D\:\\a\\_temp\\key.gpg >> local.properties
      # Commands that will run for building & releasing the library on maven.
      - run: chmod +x gradlew
      - name: Stage annotations
        run: ./gradlew autobindings-annotations:uploadArchives
      - name: Stage compiler
        run: ./gradlew autobindings-compiler:uploadArchives
      - name: Stage library
        run: ./gradlew autobindings:publishReleasePublicationToSonatypeRepository
      - name: Closing repository
        run: ./gradlew closeRepository
      - name: Release repository
        run: ./gradlew releaseRepository
